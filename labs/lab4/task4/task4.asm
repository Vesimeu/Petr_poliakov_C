.ORIG x3000

; Размер массива
ARRAY_SIZE .FILL #5

; Задайте массив с пятью элементами (измените значения по вашему желанию)
ARRAY .FILL #5
      .FILL #2
      .FILL #4
      .FILL #1
      .FILL #3

; Регистры
R0 .BLKW #1     ; Используется для временного хранения данных
R1 .BLKW #1     ; Используется для временного хранения данных
R2 .BLKW #1     ; Используется для временного хранения данных
R3 .BLKW #1     ; Используется для временного хранения данных
R4 .BLKW #1     ; Используется для временного хранения данных
R5 .BLKW #1     ; Используется для временного хранения данных
R6 .BLKW #1     ; Используется для временного хранения данных
R7 .BLKW #1     ; Используется для временного хранения данных

; Инициализация массива и регистров
        LD R0, ARRAY_SIZE     ; Загрузить размер массива в R0 (5 элементов)
        LD R1, ARRAY          ; Загрузить адрес массива в R1

; Внешний цикл: проход по массиву
OUTER   LD R2, R1, #0         ; Загрузить первый элемент массива в R2
        LD R3, R1, #1         ; Загрузить второй элемент массива в R3
        LD R4, R1, #2         ; Загрузить третий элемент массива в R4
        LD R5, R1, #3         ; Загрузить четвертый элемент массива в R5
        LD R6, R1, #4         ; Загрузить пятый элемент массива в R6

; Внутренний цикл: сравнение и обмен элементов
INNER   ADD R7, R2, R3         ; Сложить первый и второй элементы
        BRzp SKIP_SWAP        ; Если R7 положительный, пропустить обмен
        ST R3, R2, #0         ; Обменить R2 и R3
        ST R7, R2, #1         ; Обменить R2 и R7
SKIP_SWAP
        ADD R7, R3, R4         ; Сложить второй и третий элементы
        BRzp SKIP_SWAP2       ; Если R7 положительный, пропустить обмен
        ST R4, R3, #0         ; Обменить R3 и R4
        ST R7, R3, #1         ; Обменить R3 и R7
SKIP_SWAP2
        ADD R7, R4, R5         ; Сложить третий и четвертый элементы
        BRzp SKIP_SWAP3       ; Если R7 положительный, пропустить обмен
        ST R5, R4, #0         ; Обменить R4 и R5
        ST R7, R4, #1         ; Обменить R4 и R7
SKIP_SWAP3
        ADD R7, R5, R6         ; Сложить четвертый и пятый элементы
        BRzp SKIP_SWAP4       ; Если R7 положительный, пропустить обмен
        ST R6, R5, #0         ; Обменить R5 и R6
        ST R7, R5, #1         ; Обменить R5 и R7
SKIP_SWAP4

        ; Уменьшить R0 (размер массива)
        ADD R0, R0, #-1
        BRz DONE_SORT         ; Если R0 стал равным 0, завершить сортировку

        ; Перейти к следующей итерации внешнего цикла
        ADD R1, R1, #1
        BRnzp OUTER

; Завершение программы
DONE_SORT
        HALT

; Данные (вы можете изменить значения массива здесь)
ARRAY .FILL #5
      .FILL #2
      .FILL #4
      .FILL #1
      .FILL #3

.END
